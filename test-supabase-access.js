// –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ Supabase
import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://nwtyjslkvwuxdfhlucgv.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im53dHlqc2xrdnd1eGRmaGx1Y2d2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTcwNjQzMTksImV4cCI6MjA3MjY0MDMxOX0.2qlzaAfO8tDhRnz0idY51L8CQ8tlZzk7KIGPK1744FQ';

const supabase = createClient(supabaseUrl, supabaseKey);

async function testSupabaseAccess() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ Supabase...');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    console.log('1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...');
    const { data: connectionTest, error: connectionError } = await supabase
      .from('cards')
      .select('count')
      .limit(1);
    
    if (connectionError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', connectionError);
      return;
    }
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ');
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
    console.log('2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º cards
    const { data: cards, error: cardsError } = await supabase
      .from('cards')
      .select('id, term, translation')
      .limit(5);
    
    if (cardsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ cards:', cardsError);
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ cards –¥–æ—Å—Ç—É–ø–Ω–∞, –∑–∞–ø–∏—Å–µ–π:', cards.length);
      console.log('–ü—Ä–∏–º–µ—Ä—ã –∫–∞—Ä—Ç–æ—á–µ–∫:', cards);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º user_cards
    const { data: userCards, error: userCardsError } = await supabase
      .from('user_cards')
      .select('user_id, card_id, progress, state')
      .limit(5);
    
    if (userCardsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ user_cards:', userCardsError);
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ user_cards –¥–æ—Å—Ç—É–ø–Ω–∞, –∑–∞–ø–∏—Å–µ–π:', userCards.length);
      console.log('–ü—Ä–∏–º–µ—Ä—ã user_cards:', userCards);
    }
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ cards_due_for_review
    console.log('3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ cards_due_for_review...');
    const { data: dueCards, error: dueCardsError } = await supabase
      .from('cards_due_for_review')
      .select('card_id, term, translation, progress, due_at')
      .limit(5);
    
    if (dueCardsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ cards_due_for_review:', dueCardsError);
    } else {
      console.log('‚úÖ –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ cards_due_for_review –¥–æ—Å—Ç—É–ø–Ω–æ, –∑–∞–ø–∏—Å–µ–π:', dueCards.length);
      console.log('–ö–∞—Ä—Ç–æ—á–∫–∏ –≥–æ—Ç–æ–≤—ã–µ –∫ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—é:', dueCards);
    }
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º "–±–∏—Ç—ã–µ" –∑–∞–ø–∏—Å–∏
    console.log('4. –ü—Ä–æ–≤–µ—Ä—è–µ–º "–±–∏—Ç—ã–µ" –∑–∞–ø–∏—Å–∏...');
    const { data: brokenCards, error: brokenError } = await supabase
      .rpc('check_broken_cards');
    
    if (brokenError) {
      console.log('‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è check_broken_cards –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä—É—á–Ω—É—é...');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ JOIN
      const { data: allUserCards, error: allError } = await supabase
        .from('user_cards')
        .select(`
          card_id,
          cards!inner(id, term, translation)
        `)
        .limit(10);
      
      if (allError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ JOIN:', allError);
      } else {
        console.log('‚úÖ JOIN —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, –∑–∞–ø–∏—Å–µ–π:', allUserCards.length);
      }
    } else {
      console.log('‚úÖ –§—É–Ω–∫—Ü–∏—è check_broken_cards –¥–æ—Å—Ç—É–ø–Ω–∞');
      console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç:', brokenCards);
    }
    
    console.log('üéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testSupabaseAccess();















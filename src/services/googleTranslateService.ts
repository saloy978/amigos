import { getApiKey, isServiceEnabled } from '../config/apiKeys';

interface TranslationRequest {
  text: string;
  sourceLanguage: string;
  targetLanguage: string;
}

interface TranslationResponse {
  translatedText: string;
  success: boolean;
  error?: string;
}

export class GoogleTranslateService {
  private static baseUrl = 'https://translation.googleapis.com/language/translate/v2';

  /**
   * –ü–µ—Ä–µ–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç —Å –æ–¥–Ω–æ–≥–æ —è–∑—ã–∫–∞ –Ω–∞ –¥—Ä—É–≥–æ–π
   */
  static async translate(request: TranslationRequest): Promise<TranslationResponse> {
    try {
      console.log('üåç Google Translate: Starting translation...');
      console.log('Request:', request);

      if (!isServiceEnabled('GOOGLE_TRANSLATE')) {
        throw new Error('Google Translate service is not enabled');
      }

      const apiKey = getApiKey('GOOGLE_TRANSLATE_API_KEY');
      if (!apiKey) {
        throw new Error('Google Translate API key is not configured');
      }

      const response = await fetch(`${this.baseUrl}?key=${apiKey}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          q: request.text,
          source: request.sourceLanguage,
          target: request.targetLanguage,
          format: 'text'
        })
      });

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(`Google Translate API error: ${errorData.error?.message || response.statusText}`);
      }

      const data = await response.json();
      
      if (data.data?.translations?.[0]?.translatedText) {
        const translatedText = data.data.translations[0].translatedText;
        console.log('‚úÖ Google Translate: Translation successful');
        console.log(`"${request.text}" ‚Üí "${translatedText}"`);
        
        return {
          translatedText,
          success: true
        };
      } else {
        throw new Error('Invalid response format from Google Translate API');
      }

    } catch (error) {
      console.error('‚ùå Google Translate: Translation failed:', error);
      return {
        translatedText: '',
        success: false,
        error: error instanceof Error ? error.message : 'Translation failed'
      };
    }
  }

  /**
   * –ü–µ—Ä–µ–≤–æ–¥–∏—Ç —Å–ª–æ–≤–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫
   */
  static async translateToEnglish(word: string, sourceLanguage: string): Promise<TranslationResponse> {
    return this.translate({
      text: word,
      sourceLanguage: sourceLanguage,
      targetLanguage: 'en'
    });
  }

  /**
   * –ü–µ—Ä–µ–≤–æ–¥–∏—Ç —Å–ª–æ–≤–æ —Å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –Ω–∞ —Ü–µ–ª–µ–≤–æ–π —è–∑—ã–∫
   */
  static async translateFromEnglish(word: string, targetLanguage: string): Promise<TranslationResponse> {
    return this.translate({
      text: word,
      sourceLanguage: 'en',
      targetLanguage: targetLanguage
    });
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–∏—Å–µ
   */
  static getServiceInfo(): {name: string, description: string, free: boolean} {
    return {
      name: 'Google Translate',
      description: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤ —Å –ø–æ–º–æ—â—å—é Google Translate API',
      free: false // Google Translate API –ø–ª–∞—Ç–Ω—ã–π
    };
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–∞
   */
  static isAvailable(): boolean {
    return isServiceEnabled('GOOGLE_TRANSLATE') && !!getApiKey('GOOGLE_TRANSLATE_API_KEY');
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ
   */
  static getSetupInstructions(): string {
    return `
–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å Google Translate API:

1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Google Cloud Console: https://console.cloud.google.com/
2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π
3. –í–∫–ª—é—á–∏—Ç–µ Google Translate API:
   - –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ "APIs & Services" > "Library"
   - –ù–∞–π–¥–∏—Ç–µ "Cloud Translation API"
   - –ù–∞–∂–º–∏—Ç–µ "Enable"
4. –°–æ–∑–¥–∞–π—Ç–µ API –∫–ª—é—á:
   - –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ "APIs & Services" > "Credentials"
   - –ù–∞–∂–º–∏—Ç–µ "Create Credentials" > "API Key"
   - –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–π –∫–ª—é—á
5. –ó–∞–º–µ–Ω–∏—Ç–µ YOUR_GOOGLE_TRANSLATE_API_KEY –≤ src/config/apiKeys.ts
6. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ enabled: true –¥–ª—è GOOGLE_TRANSLATE –≤ SERVICE_STATUS

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: Google Translate API –ø–ª–∞—Ç–Ω—ã–π, –Ω–æ –ø–µ—Ä–≤—ã–µ 500,000 —Å–∏–º–≤–æ–ª–æ–≤ –≤ –º–µ—Å—è—Ü –±–µ—Å–ø–ª–∞—Ç–Ω—ã.
    `;
  }
}








